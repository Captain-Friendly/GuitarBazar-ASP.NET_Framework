@model GuitarBazar.Models.Seller


@{
    // Déterminer si on va ajouter un Seller ou le modifier
    bool creating = Model.Id == 0;
}



@using (Html.BeginForm())
{
    <!--Champ masqué pour transmettre via les données du formulaire une clé chiffrée pour contrecarrer la contrefaçon de formulaire -->
    @Html.AntiForgeryToken()

<div class="">
    <h4>Sellers</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control Alpha" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", rows = "8" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control Phone" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@(creating?"Ajouter":"Modifier")" class="btn btn-default" />
        </div>
    </div>
    @Html.HiddenFor(model => model.Id)

}
<hr />
<div>
    @Helper.GlyphiconAction("index/", "glyphicon-circle-arrow-left", "Retour aux Vendeurs")
</div>
